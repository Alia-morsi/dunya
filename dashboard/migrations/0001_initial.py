# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-06 15:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectionid', models.UUIDField()),
                ('name', models.CharField(max_length=200)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('root_directory', models.CharField(max_length=255)),
                ('do_import', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CollectionDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=500)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('recordingid', models.UUIDField(blank=True, null=True)),
                ('filesize', models.IntegerField(blank=True, null=True)),
                ('directory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.CollectionDirectory')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionFileState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'n', b'Not started'), (b'i', b'Importing'), (b'f', b'Finished'), (b'e', b'Error')], default=b'n', max_length=10)),
                ('state_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('collectionfile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.CollectionFile')),
            ],
            options={
                'ordering': ['-state_date'],
            },
        ),
        migrations.CreateModel(
            name='CollectionLogMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Collection')),
            ],
            options={
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='CollectionState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'n', b'Not started'), (b's', b'Scanning'), (b'd', b'Scanned'), (b'i', b'Importing'), (b'f', b'Finished'), (b'e', b'Error')], default=b'n', max_length=10)),
                ('state_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Collection')),
            ],
            options={
                'ordering': ['-state_date'],
            },
        ),
        migrations.CreateModel(
            name='MusicbrainzRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mbid', models.UUIDField()),
                ('title', models.CharField(max_length=200)),
                ('artist', models.CharField(blank=True, max_length=200, null=True)),
                ('ignore', models.BooleanField(default=False)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='MusicbrainzReleaseLogMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('musicbrainzrelease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.MusicbrainzRelease')),
            ],
            options={
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='MusicbrainzReleaseState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[(b'n', b'Not started'), (b'i', b'Importing'), (b'f', b'Finished'), (b'e', b'Error')], default=b'n', max_length=10)),
                ('state_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('musicbrainzrelease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.MusicbrainzRelease')),
            ],
            options={
                'ordering': ['-state_date'],
            },
        ),
        migrations.AddField(
            model_name='collectiondirectory',
            name='musicbrainzrelease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.MusicbrainzRelease'),
        ),
        migrations.AlterUniqueTogether(
            name='musicbrainzrelease',
            unique_together=set([('mbid', 'collection')]),
        ),
    ]
