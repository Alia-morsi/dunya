# Generated by Django 2.1.2 on 2018-12-05 14:47

import data.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('jingju', '0001_initial'), ('jingju', '0002_auto_20180828_1650'), ('jingju', '0003_auto_20180829_1659'), ('jingju', '0004_auto_20180829_1711'), ('jingju', '0005_auto_20180829_1722'), ('jingju', '0006_auto_20180830_1700'), ('jingju', '0007_auto_20180830_1704'), ('jingju', '0008_auto_20180830_2018'), ('jingju', '0009_auto_20180904_1931'), ('jingju', '0010_auto_20180905_1820'), ('jingju', '0011_auto_20180905_1821'), ('jingju', '0012_auto_20180906_1710'), ('jingju', '0013_auto_20180906_1712'), ('jingju', '0014_auto_20180907_1235'), ('jingju', '0015_auto_20180907_1306'), ('jingju', '0016_auto_20180907_1308'), ('jingju', '0017_auto_20180907_1457'), ('jingju', '0018_auto_20180907_1500'), ('jingju', '0019_auto_20180907_1542'), ('jingju', '0020_auto_20180910_1329'), ('jingju', '0021_auto_20180910_1735'), ('jingju', '0022_auto_20181203_1654'), ('jingju', '0023_auto_20181205_0923'), ('jingju', '0024_auto_20181205_0945')]

    initial = True

    dependencies = [
        ('data', '0005_auto_20181205_0923'),
        ('data', '0003_auto_20180827_1752'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('mbid', models.UUIDField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[(b'M', b'Male'), (b'F', b'Female')], max_length=1, null=True)),
                ('begin', models.CharField(blank=True, max_length=10, null=True)),
                ('end', models.CharField(blank=True, max_length=10, null=True)),
                ('artist_type', models.CharField(choices=[(b'P', b'Person'), (b'G', b'Group')], default=b'P', max_length=1)),
                ('dummy', models.BooleanField(db_index=True, default=False)),
                ('description_edited', models.BooleanField(default=False)),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.Description')),
                ('group_members', models.ManyToManyField(blank=True, related_name='groups', to='jingju.Artist')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jingju_artist_image', to='data.Image')),
            ],
            options={
                'ordering': ['id'],
            },
            bases=(models.Model, data.models.ImageMixin),
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percussion', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=50)),
                ('mbid', models.UUIDField(blank=True, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.Description')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jingju_instrument_image', to='data.Image')),
            ],
            options={
                'ordering': ['id'],
            },
            bases=(models.Model, data.models.ImageMixin),
        ),
        migrations.CreateModel(
            name='Play',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RecordingRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jingju.Recording')),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mbid', models.UUIDField(blank=True, null=True)),
                ('title', models.CharField(max_length=100)),
                ('artistcredit', models.CharField(max_length=255)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('rel_type', models.CharField(blank=True, max_length=100, null=True)),
                ('artists', models.ManyToManyField(related_name='primary_concerts', to='jingju.Artist')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jingju_release_image', to='data.Image')),
                ('recordings', models.ManyToManyField(through='jingju.RecordingRelease', to='jingju.Recording')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Collection')),
            ],
            options={
                'ordering': ['id'],
            },
            bases=(models.Model, data.models.ImageMixin),
        ),
        migrations.CreateModel(
            name='Roletype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField()),
                ('romanisation', models.CharField(max_length=100)),
                ('code', models.CharField(db_index=True, default='', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('uuid', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('mbid', models.UUIDField(blank=True, null=True)),
                ('play', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jingju.Play')),
                ('score', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jingju.Score')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='recordingrelease',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jingju.Release'),
        ),
        migrations.AddField(
            model_name='recording',
            name='instrumentalists',
            field=models.ManyToManyField(related_name='instrumentalist', through='jingju.RecordingInstrumentalist', to='jingju.Artist'),
        ),
        migrations.AddField(
            model_name='recording',
            name='work',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jingju.Work'),
        ),
        migrations.AddField(
            model_name='artist',
            name='main_instrument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jingju.Instrument'),
        ),
        migrations.AddField(
            model_name='recording',
            name='mbid',
            field=models.UUIDField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recording',
            name='title',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.CreateModel(
            name='RecordingInstrumentalist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='artist',
            name='instrument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jingju', to='jingju.Instrument'),
        ),
        migrations.AlterField(
            model_name='play',
            name='uuid',
            field=models.UUIDField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='score',
            name='uuid',
            field=models.UUIDField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordinginstrumentalist',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jingju.Artist'),
        ),
        migrations.AddField(
            model_name='recordinginstrumentalist',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jingju.Instrument'),
        ),
        migrations.AddField(
            model_name='recordinginstrumentalist',
            name='recording',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jingju.Recording'),
        ),
        migrations.AlterModelOptions(
            name='recordingrelease',
            options={'ordering': ('track',)},
        ),
        migrations.AddField(
            model_name='recordingrelease',
            name='disc',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordingrelease',
            name='disctrack',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recordingrelease',
            name='track',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recording',
            name='performers',
            field=models.ManyToManyField(to='jingju.Artist'),
        ),
        migrations.AddField(
            model_name='artist',
            name='role_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jingju.RoleType'),
        ),
        migrations.RenameField(
            model_name='play',
            old_name='name',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='score',
            old_name='name',
            new_name='name',
        ),
        migrations.CreateModel(
            name='ShengqiangBanshi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(db_index=True, default='', max_length=10)),
                ('romanisation', models.CharField(default='', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='recording',
            name='shengqiangbanshi',
            field=models.ManyToManyField(to='jingju.ShengqiangBanshi'),
        ),
        migrations.AddField(
            model_name='artist',
            name='alias',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='artist',
            name='artist_type',
            field=models.CharField(choices=[('P', 'Person'), ('G', 'Group')], default='P', max_length=1),
        ),
        migrations.AlterField(
            model_name='artist',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True),
        ),
        migrations.CreateModel(
            name='Composer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('mbid', models.UUIDField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('begin', models.CharField(blank=True, max_length=10, null=True)),
                ('end', models.CharField(blank=True, max_length=10, null=True)),
                ('alias', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.Description')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jingju_composer_image', to='data.Image')),
            ],
            options={
                'ordering': ['id'],
            },
            bases=(models.Model, data.models.ImageMixin),
        ),
        migrations.AddField(
            model_name='work',
            name='composers',
            field=models.ManyToManyField(blank=True, related_name='works', to='jingju.Composer'),
        ),
        migrations.AddField(
            model_name='work',
            name='lyricists',
            field=models.ManyToManyField(blank=True, related_name='lyric_works', to='jingju.Composer'),
        ),
    ]
