<?xml version="1.0" encoding="UTF-8"?>
<!-- Solr managed schema - automatically generated - DO NOT EDIT -->
<schema name="example" version="1.6">
  <uniqueKey>id</uniqueKey>
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
  <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="ignored" class="solr.StrField" multiValued="true" indexed="false" stored="false"/>
  <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
  <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
    <analyzer>
      <tokenizer class="solr.KeywordTokenizerFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>
  <fieldType name="phonetic" class="solr.TextField" indexed="true" stored="false">
    <analyzer>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
    </analyzer>
  </fieldType>
  <fieldType name="random" class="solr.RandomSortField" indexed="true"/>
  <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>
  <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
    <analyzer type="index">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
      <filter class="solr.SynonymFilterFactory" expand="true" synonyms="synonyms.txt" ignoreCase="true"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>
  <fieldType name="text_hi" class="solr.TextField" positionIncrementGap="100">
    <analyzer>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.IndicNormalizationFilterFactory"/>
      <filter class="solr.HindiNormalizationFilterFactory"/>
      <filter class="solr.StopFilterFactory" words="lang/stopwords_hi.txt" ignoreCase="true"/>
      <filter class="solr.HindiStemFilterFactory"/>
    </analyzer>
  </fieldType>
  <fieldType name="text_suggest" class="solr.TextField" positionIncrementGap="100">
    <analyzer type="index">
      <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.WordDelimiterFilterFactory" preserveOriginal="1" generateNumberParts="1" splitOnCaseChange="1" catenateWords="1" splitOnNumerics="1" generateWordParts="1" catenateAll="1" catenateNumbers="1"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement=" " pattern="([^\w\d\*æøåÆØÅ ])"/>
    </analyzer>
    <analyzer type="query">
      <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.WordDelimiterFilterFactory" generateNumberParts="0" splitOnCaseChange="0" catenateWords="0" splitOnNumerics="0" generateWordParts="0" catenateAll="0" catenateNumbers="0"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement=" " pattern="([^\w\d\*æøåÆØÅ ])"/>
    </analyzer>
  </fieldType>
  <fieldType name="text_suggest_edge" class="solr.TextField">
    <analyzer type="index">
      <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
      <tokenizer class="solr.KeywordTokenizerFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement=" " pattern="([\.,;:-_])"/>
      <filter class="solr.EdgeNGramFilterFactory" maxGramSize="30" minGramSize="1"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement="" pattern="([^\w\d\*æøåÆØÅ ])"/>
    </analyzer>
    <analyzer type="query">
      <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
      <tokenizer class="solr.KeywordTokenizerFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement=" " pattern="([\.,;:-_])"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement="" pattern="([^\w\d\*æøåÆØÅ ])"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement="$1" pattern="^(.{30})(.*)?"/>
    </analyzer>
  </fieldType>
  <fieldType name="text_suggest_ngram" class="solr.TextField">
    <analyzer type="index">
      <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.WordDelimiterFilterFactory" generateNumberParts="1" splitOnCaseChange="1" catenateWords="0" generateWordParts="1" catenateAll="0" catenateNumbers="0"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.EdgeNGramFilterFactory" maxGramSize="20" minGramSize="1"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement="" pattern="([^\w\d\*æøåÆØÅ ])"/>
    </analyzer>
    <analyzer type="query">
      <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.WordDelimiterFilterFactory" generateNumberParts="0" splitOnCaseChange="0" catenateWords="0" generateWordParts="0" catenateAll="0" catenateNumbers="0"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement="" pattern="([^\w\d\*æøåÆØÅ ])"/>
      <filter class="solr.PatternReplaceFilterFactory" replace="all" replacement="$1" pattern="^(.{20})(.*)?"/>
    </analyzer>
  </fieldType>
  <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
  <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
  <field name="_version_" type="long" indexed="true" stored="true"/>
  <field name="alias_txt_suggest" type="text_suggest" multiValued="true" indexed="true" stored="false"/>
  <field name="alias_txt_suggest_edge" type="text_suggest_edge" multiValued="true" indexed="true" stored="false"/>
  <field name="alias_txt_suggest_ngram" type="text_suggest_ngram" multiValued="true" indexed="true" stored="false"/>
  <field name="id" type="string" multiValued="false" indexed="true" required="true" stored="true"/>
  <field name="text" type="string" multiValued="false" indexed="true" stored="true"/>
  <field name="title_suggest" type="text_suggest" multiValued="true" indexed="true" stored="false"/>
  <field name="title_suggest_edge" type="text_suggest_edge" multiValued="true" indexed="true" stored="false"/>
  <field name="title_suggest_ngram" type="text_suggest_ngram" multiValued="true" indexed="true" stored="false"/>
  <dynamicField name="random_*" type="random"/>
  <dynamicField name="*_txt" type="text_general" multiValued="true" indexed="true" stored="true"/>
  <dynamicField name="*_is" type="int" multiValued="true" indexed="true" stored="true"/>
  <dynamicField name="*_ss" type="string" multiValued="true" indexed="true" stored="true"/>
  <dynamicField name="*_i" type="int" indexed="true" stored="true"/>
  <dynamicField name="*_s" type="string" indexed="true" stored="true"/>
  <dynamicField name="*_t" type="text_general" indexed="true" stored="true"/>
  <copyField source="alias_txt" dest="title_suggest"/>
  <copyField source="alias_txt" dest="title_suggest_edge"/>
  <copyField source="alias_txt" dest="title_suggest_ngram"/>
  <copyField source="title_t" dest="title_suggest"/>
  <copyField source="title_t" dest="title_suggest_edge"/>
  <copyField source="title_t" dest="title_suggest_ngram"/>
</schema>